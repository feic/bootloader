ARM Linker, 4.1 [Build 894] [Professional]

==============================================================================

Section Cross References

    2440init.o(RESET) refers to u2440mon.o(.text) for Bootloader
    2440lib.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    nand.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    nand.o(.text) refers to printfb.o(i.__0sprintf$bare) for __2sprintf
    nand.o(.text) refers to strlen.o(.text) for strlen
    nand.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy4
    nand.o(.text) refers to nand_lowlevel.o(.text) for CheckBadBlk
    nand.o(.text) refers to nand.o(.constdata) for .constdata
    nand.o(.text) refers to nand_lowlevel.o(.data) for boot_params
    nand.o(.text) refers to nand.o(.data) for .data
    nand_lowlevel.o(.text) refers to nand_lowlevel.o(.data) for .data
    u2440mon.o(.text) refers to 2440lib.o(.text) for Port_Init
    u2440mon.o(.text) refers to nand_lowlevel.o(.text) for InitNandFlash
    u2440mon.o(.text) refers to lcd.o(.text) for Lcd_Tft_LTV350QV_F05_Init
    u2440mon.o(.text) refers to nand.o(.text) for LoadRun
    lcd.o(.text) refers to 2440lib.o(.text) for LcdBkLtSet
    lcd.o(.text) refers to nand.o(.text) for LoadPic
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i._printf_core) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i._printf_core) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf6.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf7.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf8.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing 2440lib.o(.data), (4 bytes).
    Removing u2440mon.o(.data), (4 bytes).
    Removing u2440mon.o(.data), (4 bytes).
    Removing u2440mon.o(.data), (4 bytes).
    Removing u2440mon.o(.data), (4 bytes).
    Removing dadd.o(.text), (364 bytes).
    Removing dmul.o(.text), (212 bytes).
    Removing ddiv.o(.text), (244 bytes).
    Removing dfixul.o(.text), (68 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (198 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

12 unused section(s) (total 1192 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_uidivmod' from 2440lib.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_memcpy4' from nand.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_memclr4' from nand.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'strlen' from nand.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__2sprintf' from nand.o(.text).

5 Veneer(s) (total 40 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      496  2440init.o(RESET)
    ../../microlib/division.c                0x00000000   Number         0  uldiv.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  uidiv.o ABSOLUTE
    ../../microlib/fpadd.c                   0x00000000   Number         0  dadd.o ABSOLUTE
    ../../microlib/fpdiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../../microlib/fpepilogue.c              0x00000000   Number         0  depilogue.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  dfixul.o ABSOLUTE
    ../../microlib/fpmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llsshr.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llushr.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llshl.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfb.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf6.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf5.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf4.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf3.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfa.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf1.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf8.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf7.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf0.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf2.o ABSOLUTE
    ../../microlib/stdio/fputc.c             0x00000000   Number         0  fputc.o ABSOLUTE
    ../../microlib/stdio/semi.s              0x00000000   Number         0  semi.o ABSOLUTE
    ../../microlib/stdio/streams.c           0x00000000   Number         0  stdout.o ABSOLUTE
    ../../microlib/string/memcpy.c           0x00000000   Number         0  memcpya.o ABSOLUTE
    ../../microlib/string/memcpy.c           0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../../microlib/string/memset.c           0x00000000   Number         0  memseta.o ABSOLUTE
    ../../microlib/string/strlen.c           0x00000000   Number         0  strlen.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  iusefp.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  iusesemip.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    src\2440init.s                           0x00000000   Number         0  2440init.o ABSOLUTE
    src\2440lib.c                            0x00000000   Number         0  2440lib.o ABSOLUTE
    src\lcd.c                                0x00000000   Number         0  lcd.o ABSOLUTE
    src\nand.c                               0x00000000   Number         0  nand.o ABSOLUTE
    src\nand_lowlevel.c                      0x00000000   Number         0  nand_lowlevel.o ABSOLUTE
    src\u2440mon.c                           0x00000000   Number         0  u2440mon.o ABSOLUTE
    CEntry                                   0x000000e4   ARM Code       0  2440init.o(RESET)
    .text                                    0x000001f0   Section        0  2440lib.o(.text)
    .text                                    0x00000430   Section        0  nand.o(.text)
    .text                                    0x00000600   Section        0  nand_lowlevel.o(.text)
    WaitNFBusy                               0x00000730   ARM Code      40  nand_lowlevel.o(.text)
    .text                                    0x00000760   Section        0  u2440mon.o(.text)
    .text                                    0x000007d4   Section        0  lcd.o(.text)
    Lcd_Init_320_240                         0x00000834   ARM Code     124  lcd.o(.text)
    .text                                    0x000008e0   Section        0  uidiv.o(.text)
    .text                                    0x00000918   Section        0  memcpya.o(.text)
    .text                                    0x00000944   Section        0  memseta.o(.text)
    .text                                    0x00000978   Section        0  strlen.o(.text)
    i.__0sprintf$bare                        0x00000990   Section        0  printfb.o(i.__0sprintf$bare)
    i.__ARM_common_call_via_r6               0x000009b8   Section        0  printfb.o(i.__ARM_common_call_via_r6)
    i._printf_core                           0x000009ba   Section        0  printfb.o(i._printf_core)
    _printf_core                             0x000009bb   Thumb Code    36  printfb.o(i._printf_core)
    i._sputc                                 0x000009de   Section        0  printfb.o(i._sputc)
    _sputc                                   0x000009df   Thumb Code    10  printfb.o(i._sputc)
    .constdata                               0x000009e8   Section      130  nand.o(.constdata)
    .data                                    0x30000000   Section        4  nand.o(.data)
    StartPage                                0x30000000   Data           4  nand.o(.data)
    .data                                    0x30000004   Section      568  nand_lowlevel.o(.data)
    .data                                    0x3000023c   Section        2  nand_lowlevel.o(.data)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    Image$$ER_ROM1$$RO$$Base                 0x00000000   Number         0  2440init.o(RESET)
    Port_Init                                0x000001f0   ARM Code     152  2440lib.o(.text)
    Uart_Init                                0x00000288   ARM Code      68  2440lib.o(.text)
    Uart_SendByte                            0x000002cc   ARM Code      56  2440lib.o(.text)
    Uart_SendString                          0x00000304   ARM Code      40  2440lib.o(.text)
    LcdBkLtSet                               0x0000032c   ARM Code     208  2440lib.o(.text)
    call_linux                               0x00000430   ARM Code     112  nand.o(.text)
    LoadRun                                  0x000004a0   ARM Code     228  nand.o(.text)
    LoadPic                                  0x00000584   ARM Code     104  nand.o(.text)
    ReadPage                                 0x00000600   ARM Code     144  nand_lowlevel.o(.text)
    CheckBadBlk                              0x00000690   ARM Code     124  nand_lowlevel.o(.text)
    InitNandFlash                            0x0000070c   ARM Code      36  nand_lowlevel.o(.text)
    Bootloader                               0x00000760   ARM Code      52  u2440mon.o(.text)
    Lcd_Tft_LTV350QV_F05_Init                0x000007d4   ARM Code      96  lcd.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_uidivmod 0x000008d8   ARM Code       8  uidiv.o(.text)
    __aeabi_uidiv                            0x000008e1   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000008e1   Thumb Code    46  uidiv.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_memcpy4 0x00000910   ARM Code       8  memcpya.o(.text)
    __aeabi_memcpy                           0x00000919   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000919   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000919   Thumb Code     0  memcpya.o(.text)
    Inline ARM to Thumb Veneer to __aeabi_memclr4 0x0000093c   ARM Code       8  memseta.o(.text)
    __aeabi_memset                           0x00000945   Thumb Code    16  memseta.o(.text)
    __aeabi_memset4                          0x00000945   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000945   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000955   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000955   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000955   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000959   Thumb Code    24  memseta.o(.text)
    Inline ARM to Thumb Veneer to strlen     0x00000970   ARM Code       8  strlen.o(.text)
    strlen                                   0x00000979   Thumb Code    16  strlen.o(.text)
    Inline ARM to Thumb Veneer to __2sprintf 0x00000988   ARM Code       8  printfb.o(i.__0sprintf$bare)
    __0sprintf$bare                          0x00000991   Thumb Code    34  printfb.o(i.__0sprintf$bare)
    __1sprintf$bare                          0x00000991   Thumb Code     0  printfb.o(i.__0sprintf$bare)
    __2sprintf                               0x00000991   Thumb Code     0  printfb.o(i.__0sprintf$bare)
    __ARM_common_call_via_r6                 0x000009b9   Thumb Code     2  printfb.o(i.__ARM_common_call_via_r6)
    Image$$ER_ROM1$$RO$$Limit                0x00000a6a   Number         0  nand.o(.constdata)
    Image$$RW_RAM1$$RW$$Base                 0x30000000   Number         0  nand.o(.data)
    boot_params                              0x30000004   Data         568  nand_lowlevel.o(.data)
    NandAddr                                 0x3000023c   Data           2  nand_lowlevel.o(.data)
    Image$$RW_RAM1$$RW$$Limit                0x3000023e   Number         0  nand_lowlevel.o(.data)
    Image$$RW_RAM1$$ZI$$Base                 0x30000240   Number         0  anon$$obj.o(linker$$defined$$symbols)
    Image$$RW_RAM1$$ZI$$Limit                0x30000240   Number         0  anon$$obj.o(linker$$defined$$symbols)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_ROM1 (Base: 0x00000000, Size: 0x00000cac, Max: 0x00002000, ABSOLUTE)

    Execution Region ER_ROM1 (Base: 0x00000000, Size: 0x00000a6c, Max: 0x00002000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000001f0   Code   RO            1  * RESET               2440init.o
    0x000001f0   0x00000240   Code   RO            6    .text               2440lib.o
    0x00000430   0x000001d0   Code   RO           53    .text               nand.o
    0x00000600   0x00000160   Code   RO           79    .text               nand_lowlevel.o
    0x00000760   0x00000074   Code   RO           98    .text               u2440mon.o
    0x000007d4   0x00000104   Code   RO          128    .text               lcd.o
    0x000008d8   0x00000008   Ven    RO          142    .text               mc_t.l(uidiv.o)
    0x000008e0   0x0000002e   Code   RO          142    .text               mc_t.l(uidiv.o)
    0x0000090e   0x00000002   PAD
    0x00000910   0x00000008   Ven    RO          144    .text               mc_t.l(memcpya.o)
    0x00000918   0x00000024   Code   RO          144    .text               mc_t.l(memcpya.o)
    0x0000093c   0x00000008   Ven    RO          146    .text               mc_t.l(memseta.o)
    0x00000944   0x0000002c   Code   RO          146    .text               mc_t.l(memseta.o)
    0x00000970   0x00000008   Ven    RO          148    .text               mc_t.l(strlen.o)
    0x00000978   0x00000010   Code   RO          148    .text               mc_t.l(strlen.o)
    0x00000988   0x00000008   Ven    RO          155    i.__0sprintf$bare   mc_t.l(printfb.o)
    0x00000990   0x00000028   Code   RO          155    i.__0sprintf$bare   mc_t.l(printfb.o)
    0x000009b8   0x00000002   Code   RO          174    i.__ARM_common_call_via_r6  mc_t.l(printfb.o)
    0x000009ba   0x00000024   Code   RO          160    i._printf_core      mc_t.l(printfb.o)
    0x000009de   0x0000000a   Code   RO          162    i._sputc            mc_t.l(printfb.o)
    0x000009e8   0x00000082   Data   RO           54    .constdata          nand.o


    Execution Region RW_RAM1 (Base: 0x30000000, Size: 0x00000240, Max: 0x04000000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000000   0x00000004   Data   RW           55    .data               nand.o
    0x30000004   0x00000238   Data   RW           80    .data               nand_lowlevel.o
    0x3000023c   0x00000002   Data   RW           81    .data               nand_lowlevel.o
    0x3000023e   0x00000002   PAD
    0x30000240   0x00000000   Zero   RW          445    linker$$defined$$symbols  anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       496        148          0          0          0        292   2440init.o
       576         52          0          0          0       3247   2440lib.o
       260         40          0          0          0       1416   lcd.o
       464         20        130          4          0       2613   nand.o
       352          8          0        570          0       3248   nand_lowlevel.o
       116         64          0          0          0        377   u2440mon.o

    ----------------------------------------------------------------------
      2264        332        132        576          0      11193   Object Totals
         0          0          0          0          0          0   (incl. Generated)
         0          0          2          2          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        44          0          0          0          0         60   memcpya.o
        52          0          0          0          0        112   memseta.o
        96          6          0          0          0        292   printfb.o
        24          0          0          0          0         60   strlen.o
        54          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
       272          6          0          0          0        596   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       270          6          0          0          0        596   mc_t.l

    ----------------------------------------------------------------------
       272          6          0          0          0        596   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2536        338        132        576          0      11361   Grand Totals
      2536        338        132        576          0      11361   ELF Image Totals
      2536        338        132        576          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 2668 (   2.61kB)
    Total RW  Size (RW Data + ZI Data)               576 (   0.56kB)
    Total ROM Size (Code + RO Data + RW Data)       3244 (   3.17kB)

==============================================================================

